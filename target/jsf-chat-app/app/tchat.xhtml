<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
<h:head>
    <title>Tchat</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        form {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        h2 {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            color: white;
            padding: 24px 30px;
            font-size: 24px;
            font-weight: 600;
            margin: 0;
        }

        #messages {
            height: 400px;
            overflow: auto;
            border: none;
            padding: 20px 30px;
            background: #f8f9fa;
        }

        #messages>div {
            margin-bottom: 12px;
            padding: 12px 16px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
            color: #212529;
            line-height: 1.5;
        }

        #messages::-webkit-scrollbar {
            width: 8px;
        }

        #messages::-webkit-scrollbar-track {
            background: #e9ecef;
        }

        #messages::-webkit-scrollbar-thumb {
            background: #6c757d;
            border-radius: 4px;
        }

        table {
            width: 100%;
            padding: 25px 30px 15px 30px;
            border-collapse: separate;
            border-spacing: 0 12px;
        }

        table td {
            padding: 8px 10px 8px 0;
        }

        table td:first-child {
            font-weight: 500;
            color: #495057;
            width: 100px;
        }

        input[type="text"] {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            font-family: inherit;
        }

        input[type="text"]:focus {
            outline: none;
            border-color: #6c757d;
            box-shadow: 0 0 0 3px rgba(108, 117, 125, 0.1);
        }

        input[type="button"] {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            color: white;
            border: none;
            padding: 12px 35px;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 0 30px 20px 30px;
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
        }

        input[type="button"]:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(108, 117, 125, 0.4);
        }

        input[type="button"]:active {
            transform: translateY(0);
        }

        a {
            color: #6c757d;
            text-decoration: none;
            margin-left: 30px;
            margin-bottom: 20px;
            display: inline-block;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        a:hover {
            color: #495057;
            text-decoration: underline;
        }
    </style>
    <script>
        let ws;
        function connect() {
            const loc = window.location;
            const proto = loc.protocol === 'https:' ? 'wss:' : 'ws:';
            const base = '#{request.contextPath}'; // ex: /monapp
            const url = proto + '//' + loc.host + base + '/ws/tchat';
            ws = new WebSocket(url);

            ws.onopen = () => console.log('WS open:', url);
            ws.onerror = e => console.error('WS error', e);
            ws.onclose = () => console.log('WS closed');
            ws.onmessage = e => {
                const msg = JSON.parse(e.data);
                const box = document.getElementById('messages');
                const div = document.createElement('div');
                div.textContent = msg.author + ': ' + msg.text + ' (' + msg.sentAt + ')';
                box.appendChild(div);
                box.scrollTop = box.scrollHeight;
            };
        }
        function send() {
            if (!ws || ws.readyState !== 1) { console.warn('WS not open'); return; }
            const author = document.getElementById('form:sname').value;
            const text = document.getElementById('form:text').value;
            if (!author || !text) return;
            ws.send(JSON.stringify({ author, text }));
            document.getElementById('form:text').value = '';
        }
        window.addEventListener('load', connect);
    </script>
</h:head>
<h:body>
    <h:form id="form">
        <h2>Hitsaty</h2>
        <div id="messages" style="height:300px; overflow:auto; border:1px solid #ccc; padding:8px;">
            <ui:repeat value="#{chat.messages}" var="m">
                <div>#{m.student.name}: #{m.content} <h:outputText value="#{m.sentAt}">
                        <f:convertDateTime pattern="dd/MM/yyyy HH:mm:ss" />
                    </h:outputText>
                </div>
            </ui:repeat>
        </div>
        <h:panelGrid columns="2">
            <h:outputLabel for="sname" value="Nom:" />
            <h:inputText id="sname" value="#{chat.studentName}" />

            <h:outputLabel for="text" value="Message:" />
            <h:inputText id="text" value="#{chat.text}" />
        </h:panelGrid>
        <h:commandButton type="button" value="Alefa" onclick="send(); return false;" />
        <h:commandLink value="Hiala" action="#{auth.logout}" />
    </h:form>
</h:body>

</html>