<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
<h:head>
    <title>Tchat</title>
    <script>
        let ws;
        function connect() {
            const loc = window.location;
            const proto = loc.protocol === 'https:' ? 'wss:' : 'ws:';
            const base = '#{request.contextPath}'; // ex: /monapp
            const url = proto + '//' + loc.host + base + '/ws/tchat';
            ws = new WebSocket(url);

            ws.onopen = () => console.log('WS open:', url);
            ws.onerror = e => console.error('WS error', e);
            ws.onclose = () => console.log('WS closed');
            ws.onmessage = e => {
                const msg = JSON.parse(e.data);
                const box = document.getElementById('messages');
                const div = document.createElement('div');
                div.textContent = msg.author + ': ' + msg.text + ' (' + msg.sentAt + ')';
                box.appendChild(div);
                box.scrollTop = box.scrollHeight;
            };
        }
        function send() {
            if (!ws || ws.readyState !== 1) { console.warn('WS not open'); return; }
            const author = document.getElementById('form:sname').value;
            const text = document.getElementById('form:text').value;
            if (!author || !text) return;
            ws.send(JSON.stringify({ author, text }));
            document.getElementById('form:text').value = '';
        }
        window.addEventListener('load', connect);
    </script>
</h:head>
<h:body>
    <h:form id="form">
        <h2>Tchat</h2>
        <div id="messages" style="height:300px; overflow:auto; border:1px solid #ccc; padding:8px;">
            <ui:repeat value="#{chat.messages}" var="m">
                <div>#{m.student.name}: #{m.content} <h:outputText value="#{m.sentAt}">
                        <f:convertDateTime pattern="dd/MM/yyyy HH:mm:ss" />
                    </h:outputText>
                </div>
            </ui:repeat>
        </div>
        <h:panelGrid columns="2">
            <h:outputLabel for="sname" value="Nom:" />
            <h:inputText id="sname" value="#{chat.studentName}" />

            <h:outputLabel for="text" value="Message:" />
            <h:inputText id="text" value="#{chat.text}" />
        </h:panelGrid>
        <h:commandButton type="button" value="Envoyer" onclick="send(); return false;" />
        <h:commandLink value="DÃ©connexion" action="#{auth.logout}" />
    </h:form>
</h:body>

</html>